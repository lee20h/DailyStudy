(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{360:function(t,n,e){"use strict";e.r(n);var r=e(42),a=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"회문"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#회문"}},[t._v("#")]),t._v(" 회문")]),t._v(" "),e("p",[t._v("회문 "),e("a",{attrs:{href:"https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14QpAaAAwCFAYi&categoryId=AV14QpAaAAwCFAYi&categoryType=CODE",target:"_blank",rel:"noopener noreferrer"}},[t._v("SWEA"),e("OutboundLink")],1),t._v(" 회문2 "),e("a",{attrs:{href:"https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14Rq5aABUCFAYi&categoryId=AV14Rq5aABUCFAYi&categoryType=CODE",target:"_blank",rel:"noopener noreferrer"}},[t._v("SWEA"),e("OutboundLink")],1),e("br"),t._v("\n회문이란 앞으로 읽어도 뒤로 읽어도 같은 단어이다. 회문1 같은 경우에는 8x8 단어판와 길이가 주어지면 그 단어판에서 길이만큼의 회문 갯수를 세면 된다.")]),t._v(" "),e("h2",{attrs:{id:"회문1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#회문1"}},[t._v("#")]),t._v(" 회문1")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("string temp;\nfor (int i=n; i<n+len; i++) {\n\ttemp += v[i][m];\n}\nstring temp2 = temp;\nreverse(temp.begin(),temp.end());\nif(temp == temp2)\n\tans++;\n")])])]),e("p",[t._v("와 같이 뒤집은 문자와 문자가 같으면 회문으로 처리했다.")]),t._v(" "),e("h2",{attrs:{id:"회문2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#회문2"}},[t._v("#")]),t._v(" 회문2")]),t._v(" "),e("p",[t._v("회문2의 경우에는 회문1에서 단어판을 100x100으로 키우고 최대의 길이의 회문을 찾으면 된다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("int x(int len, int pos_y, int pos_x) {\n\tfor (int i=0; i<len/2; i++) {\n\t\tif(v[pos_y][pos_x + i] != v[pos_y][pos_x + len - 1 - i])\n\t\t\treturn 0;\n\t}\n\treturn len;\n}\nint y(int len, int pos_y, int pos_x) {\n\tfor (int i=0; i<len/2; i++) {\n\t\tif(v[pos_y + i][pos_x] != v[pos_y + len - 1 - i][pos_x])\n\t\t\treturn 0;\n\t}\n\treturn len;\n}\n\nfor (int k=1; k<100; k++) {\n\tfor (int i=0; i<=100-k; i++) {\n\t\tfor (int j=0; j<100; j++) {\n\t\t\ttemp = y(k,i,j);\n\t\t\tlen = max(len,temp);\n\t\t}\n\t}\n\tfor (int i=0; i<100; i++) {\n\t\tfor (int j=0; j<=100-k; j++) {\n\t\t\ttemp = x(k,i,j);\n\t\t\tlen = max(len,temp);\n\t\t}\n\t}\n}\n")])])]),e("p",[t._v("k가 길이, i가 열, j가 행으로 잡고 길이가 k일때 (i,j)에서 시작하는 회문을 찾고 있으면 길이를 반환해서 len값과 비교해서 큰 값을 len에 넣는다.")])])}),[],!1,null,null,null);n.default=a.exports}}]);