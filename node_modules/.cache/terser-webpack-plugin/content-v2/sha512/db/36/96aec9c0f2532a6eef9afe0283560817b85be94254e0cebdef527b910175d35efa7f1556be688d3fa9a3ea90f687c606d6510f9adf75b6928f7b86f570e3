{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{359:function(t,n,a){\"use strict\";a.r(n);var e=a(42),r=Object(e.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"정렬\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#정렬\"}},[t._v(\"#\")]),t._v(\" 정렬\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"시간복잡도-θ-n²-인-정렬\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#시간복잡도-θ-n²-인-정렬\"}},[t._v(\"#\")]),t._v(\" 시간복잡도 Θ(n²)인 정렬\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"선택-정렬\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#선택-정렬\"}},[t._v(\"#\")]),t._v(\" 선택 정렬\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[t._v(\"```\\nselectionSort(A[], n) {\\n\\tfor last <- n downto 2 {\\n\\t\\tA배열 중 가장 큰 수 찾는다.\\n\\t\\t큰수 와 last와 swap\\n\\t}\\n}\\n```\\n(n-1)+(n-2)+...+2+1 = Θ(n²) worst, average  \\n\")])])]),a(\"h3\",{attrs:{id:\"버블-정렬\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#버블-정렬\"}},[t._v(\"#\")]),t._v(\" 버블 정렬\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[t._v(\"```\\nbubbleSort(A[], n) {\\n\\tfor last <- n downto 2\\n\\t\\tfor i <- 1 to last - 1\\n\\t\\t\\tif(A[i]>A[i+1]) then A[i], A[i+1] swap \\n}\\n```\\n(n-1)+(n-2)+...+2+1 = Θ(n²) worst, average\\n\")])])]),a(\"h3\",{attrs:{id:\"삽입정렬\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#삽입정렬\"}},[t._v(\"#\")]),t._v(\" 삽입정렬\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[t._v(\"```\\ninsertionSort(A[], n) {\\n\\tfor i <- 2 to n\\n\\t\\tA[]배열의 적당한 자리에 A[i]을 삽입\\n}\\n```\\nWorst : 1+2+...+(n-2)+(n-1) : Θ(n²)  \\nAverage : ½(1+2+...+(n-2)+(n-1)) : Θ(n²)  \\nBest : Θ(n) (이미 정렬 된 경우)  \\n\")])])]),a(\"h2\",{attrs:{id:\"평균적으로-시간복잡도-θ-nlogn\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#평균적으로-시간복잡도-θ-nlogn\"}},[t._v(\"#\")]),t._v(\" 평균적으로 시간복잡도 Θ(nlogn)\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"병합정렬\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#병합정렬\"}},[t._v(\"#\")]),t._v(\" 병합정렬\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[t._v(\"```\\nmergeSort(A[],p,r) {\\n\\tif(p<r) then {\\n\\t\\tq <- |(p+r)/2|;\\n\\t\\tmergeSort(A,p,q);\\n\\t\\tmergeSort(A,q+1,r);\\n\\t\\tmerge(A,p,q,r);\\n\\t}\\n}\\nmerge(A[],p,q,r) {\\n\\ti = p; j = q+1; t= 1;\\n\\twhile(i<=q && j <= r) {\\n\\t\\tif(A[i]<=A[j]) then temp[t++] = A[i++];\\n\\t\\telse temp[t++] = A[j++];\\n\\t}\\n\\n\\twhile(i<=q) temp[t++] = A[i++];\\n\\twhile(i<=r) temp[t++] = A[j++];\\n\\n\\ti = p; t = 1;\\n\\twhile(i<=r) A[i++] = temp[t++];\\n}\\n```\\nmerge : O(n)\\nmergeSort : O(logn)\\n\")])])]),a(\"h3\",{attrs:{id:\"퀵정렬\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#퀵정렬\"}},[t._v(\"#\")]),t._v(\" 퀵정렬\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[t._v(\"```\\nquickSort(A[],p,r) {\\n\\tif(p<r) then {\\n\\t\\tq = partion(A,p,r);\\n\\t\\tquickSort(A,p,q-1);\\n\\t\\tquickSort(A,q+1,r);\\n\\t}\\n}\\npartition(A[],p,r) {\\n\\tx = A[r];\\n\\ti = p-1;\\n\\tfor j <- p to r-1\\n\\t\\tif(A[j]<=x) then swap(A[++i], A[i])\\n\\tswap(A[i+1], A[r])\\n\\treturn i+1\\n}\\n```\\naverage : Θ(nlogn)\\nworst : Θ(n²) (이미 정렬 된 경우)\\n\")])])]),a(\"h3\",{attrs:{id:\"힙정렬\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#힙정렬\"}},[t._v(\"#\")]),t._v(\" 힙정렬\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[t._v(\"```\\nheapSort(A[], n) {\\n\\tbuildHeap(A,n);\\n\\tfor i <- downto 2 {\\n\\t\\tswap(A[1], A[i]);\\n\\t\\theapify(A,1,i-1)\\n\\t}\\n}\\nbuildHeap(A[],n) {\\n\\tfor i <- n/2 downto 1\\n\\t\\theapify(A,i,n);\\n}\\nheapify(A[], k, n) {\\n\\tleft = 2k; right 2k+1;\\n\\tif(right<=n) {\\n\\t\\tif(A[left] < A[right])\\n\\t\\t\\tsmaller = left;\\n\\t\\telse\\n\\t\\t\\tsmaller = right;\\n\\n\\t}\\n\\telse if (left<=n) smaller = left;\\n\\telse return;\\n\\tif(A[smaller] < A[k]) {\\n\\t\\tswap(A[k],A[smaller]);\\n\\t\\theapify(A, smaller, n);\\n\\t}\\n}\\n```\\nworst : O(nlogn) buildHeap O(nlogn) heapify O(logn)\\n\")])])]),a(\"h2\",{attrs:{id:\"θ-n-정렬\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#θ-n-정렬\"}},[t._v(\"#\")]),t._v(\" Θ(n) 정렬\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[t._v(\"하한선 Ω(nlogn)  \\n특수한 성질 만족하면 Θ(n)정렬 가능\\n\")])])]),a(\"h3\",{attrs:{id:\"계수정렬-counting-sort\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#계수정렬-counting-sort\"}},[t._v(\"#\")]),t._v(\" 계수정렬(counting sort)\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"countingSort(A,B,n) {\\n\\tfor i = 1 to k\\n\\t\\tC[i] = 0;\\n\\tfor j = 1 to n\\n\\t\\tC[A[j]]++;\\n\\tfor i = 2 to k\\n\\t\\tC[i] = C[i] + C[i-1];\\n\\n\\tfor j = n downto 1 {\\n\\t\\tB[C[A[j]]] = A[j];\\n\\t\\tC[A[j]]--;\\n\\t}\\n}\\n\")])])]),a(\"h3\",{attrs:{id:\"기수정렬-radix-sort\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#기수정렬-radix-sort\"}},[t._v(\"#\")]),t._v(\" 기수정렬(Radix Sort)\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"void radixSort(int n, int t) {\\n\\tqueue<int> q[10];\\n\\t\\n\\tfor (int i=1; i<=t; i++) {\\n\\t\\tfor (int j=1; j<=n; j++) {\\n\\t\\t\\tint d = digit(v[j], i);\\n\\t\\t\\tq[d].push(v[j]);\\n\\t\\t}\\n\\t\\tint p = 1;\\n\\t\\tfor (int j=0; j<=9; j++) {\\n\\t\\t\\twhile(!q[j].empty()) {\\n\\t\\t\\t\\tv[p++] = q[j].front();\\n\\t\\t\\t\\tq[j].pop();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfor (int i=1; i<=n; i++) {\\n\\t\\tcout << v[i] << ' ';\\n\\t}\\n}\\n\")])])]),a(\"p\",[t._v(\"Θ(n)\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"효율성-비교\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#효율성-비교\"}},[t._v(\"#\")]),t._v(\" 효율성 비교\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Kind\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Worst Case\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Average Case\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Selection Sort\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n²\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n²\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Bubble Sort\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n²\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n²\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Insertion Sort\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n²\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n²\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Merge Sort\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"nlogn\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"nlogn\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Quick Sort\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n²\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"nlogn\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Counting Sort\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Radix Sort\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"n\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"Heap Sort\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"nlogn\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"right\"}},[t._v(\"nlogn\")])])])]),t._v(\" \"),a(\"p\",[t._v(\"Best Case인 경우 O(n)인 정렬 Insertion Sort, Counting Sort, Radix Sort\")])])}),[],!1,null,null,null);n.default=r.exports}}]);","extractedComments":[]}